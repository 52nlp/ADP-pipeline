[
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "DISEASE[disease],SYMPTOMS[pain],PhysicalAffliction[disease]", 
                "explanation": "CAUSE-NOT-FUNCTION[_2], CAUSING-THING_F[disease; _2]", 
                "sourceInLm": false, 
                "target": "POVERTY[poverty]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "POVERTY", 
        "targetConceptSubDomain": "POVERTY", 
        "sourceConceptSubDomain": "SYMPTOMS, PhysicalAffliction", 
        "sourceFrameElementSentence": "DISEASE[disease],SYMPTOMS[pain],PhysicalAffliction[disease]", 
        "isiDescription": "", 
        "sourceFrame": "DISEASE", 
        "isiAbductiveExplanation": "poverty-nn(e12,x3) ^ pain-nn(e11,x4) ^ equal(e10,x3,x4) ^ neuter(e9,x0) ^ feel-vb(x1,x0,u7,u8) ^ disease-nn(e6,x0) ^ like-in(e5,x1,x0) ^ TS#POVERTY(x3) ^ T#ECONOMIC-INEQUALITY(_0) ^ S#DISEASE(_1) ^ SS#SYMPTOMS(x4) ^ S#DISEASE(x0) ^ SS#PhysicalAffliction(x0) ^ I#DISEASE(_1) ^ M#CAUSE-NOT-FUNCTION(_2) ^ M#CAUSING-THING_F(_1,_2) ^ =(_1,x0)", 
        "id": "1", 
        "targetFrameElementSentence": "POVERTY[poverty]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "DISEASE[plague],PhysicalAffliction[plague],EPIDEMIC[virus]", 
                "explanation": "CAUSE-NOT-FUNCTION[_6], CAUSING-THING_F[plague; _6]", 
                "sourceInLm": false, 
                "target": "POVERTY[poverty]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "POVERTY", 
        "targetConceptSubDomain": "POVERTY", 
        "sourceConceptSubDomain": "PhysicalAffliction, EPIDEMIC", 
        "sourceFrameElementSentence": "DISEASE[plague],PhysicalAffliction[plague],EPIDEMIC[virus]", 
        "isiDescription": "", 
        "sourceFrame": "DISEASE", 
        "isiAbductiveExplanation": "poverty-nn(e23,x2) ^ or(e18,e20,e22) ^ plague-nn(e22,x8) ^ like-in(e21,x2,x8) ^ virus-nn(e20,x7) ^ like-in(e19,x2,x7) ^ as-in(e17,e18,x6) ^ neuter(e16,x3) ^ exist-vb(x6,x3,u14,u15) ^ multiply-nn(e13,x4) ^ subset_of(e12,x4,x5) ^ destroy-nn(e11,x3) ^ subset_of(e10,x3,x5) ^ rel(e9,x6,x5) ^ !=(e21,e19) ^ !=(e21,e19) ^ !=(e12,e10) ^ TS#POVERTY(x2) ^ T#ECONOMIC-INEQUALITY(_4) ^ S#DISEASE(x8) ^ SS#PhysicalAffliction(x8) ^ S#DISEASE(_5) ^ SS#EPIDEMIC(x7) ^ I#DISEASE(x8) ^ M#CAUSE-NOT-FUNCTION(_6) ^ M#CAUSING-THING_F(x8,_6) ^ =(_5,x8)", 
        "id": "2", 
        "targetFrameElementSentence": "POVERTY[poverty]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "CRIME[theft],THEFT[theft]", 
                "explanation": "AGAINST-SOCIETY-ACTION[theft]", 
                "sourceInLm": false, 
                "target": "TAXATION[taxation]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "TAXATION", 
        "targetConceptSubDomain": "TAXATION", 
        "sourceConceptSubDomain": "THEFT", 
        "sourceFrameElementSentence": "CRIME[theft],THEFT[theft]", 
        "isiDescription": "", 
        "sourceFrame": "CRIME", 
        "isiAbductiveExplanation": "taxation-nn(e14,x0) ^ imp(e5,e6,x2) ^ other-adj(e13,x1) ^ theft-nn(e12,x3) ^ than-in(e11,x1,x3) ^ consider-vb(x2,u10,x1,x0) ^ whq(e7,e8,e9) ^ rel(e9,x2,x4) ^ manner(e8,x4) ^ thing(e6,x1) ^ TS#TAXATION(x0) ^ T#ECONOMIC-INEQUALITY(_8) ^ S#CRIME(x3) ^ SS#THEFT(x3) ^ I#CRIME(x3) ^ M#AGAINST-SOCIETY-ACTION(x3)", 
        "id": "3", 
        "targetFrameElementSentence": "TAXATION[taxation]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "CONFINEMENT[jail,bondage],RESTRAINTS[bondage],ConfinedSpace[jail]", 
                "explanation": "CAUSE-NOT-FUNCTION[_10], CAUSING-THING_F[bondage,jail; _10]", 
                "sourceInLm": false, 
                "target": "POVERTY[poverty]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "POVERTY", 
        "targetConceptSubDomain": "POVERTY", 
        "sourceConceptSubDomain": "ConfinedSpace, RESTRAINTS", 
        "sourceFrameElementSentence": "CONFINEMENT[jail,bondage],RESTRAINTS[bondage],ConfinedSpace[jail]", 
        "isiDescription": "", 
        "sourceFrame": "CONFINEMENT", 
        "isiAbductiveExplanation": "poverty-nn(e25,x1) ^ like-in(e24,x1,x10) ^ live-vb(x9,x10,u22,u23) ^ jail-nn(e21,x8) ^ in-in(e20,x9,x8) ^ like-in(e19,x1,x7) ^ live-vb(x6,x7,u17,u18) ^ bondage-nn(e16,x5) ^ under-in(e15,x6,x5) ^ like-in(e14,x1,x4) ^ free-adj(e13,x4) ^ wait-vb(x2,x4,e13,u12) ^ !=(e24,e19,e14) ^ !=(e24,e19,e14) ^ TS#POVERTY(x1) ^ T#ECONOMIC-INEQUALITY(_9) ^ S#CONFINEMENT(x8) ^ SS#ConfinedSpace(x8) ^ S#CONFINEMENT(x5) ^ SS#RESTRAINTS(x5) ^ I#CONFINEMENT(x8) ^ M#CAUSE-NOT-FUNCTION(_10) ^ M#CAUSING-THING_F(x8,_10) ^ =(u23,u18) ^ =(x8,x5) ^ =(x10,x7) ^ =(x6,x9) ^ =(u22,u17)", 
        "id": "4", 
        "targetFrameElementSentence": "POVERTY[poverty]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "CURE[cure],EPIDEMIC[epidemic]", 
                "explanation": "CAUSE-NOT-FUNCTION[_17], CAUSING-THING_F[_14; _17], CAUSE-NOT-EXIST[_19], CAUSING-THING_E[cure; _19]", 
                "sourceInLm": false, 
                "target": "POVERTY[poverty,poverty]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "POVERTY", 
        "targetConceptSubDomain": "POVERTY", 
        "sourceConceptSubDomain": "EPIDEMIC, CURE", 
        "sourceFrameElementSentence": "CURE[cure],EPIDEMIC[epidemic]", 
        "isiDescription": "", 
        "sourceFrame": "DISEASE", 
        "isiAbductiveExplanation": "event(e50,x12) ^ equal(e49,x6,x11) ^ poverty-nn(e48,x15) ^ in-in(e47,x15,x0) ^ better-adj(e46,x16) ^ chance-nn(e45,x16) ^ thing(e44,x15) ^ foreign-adj(e43,x14) ^ country-nn(e42,x14) ^ in-in(e41,x15,x14) ^ than-in(e40,x16,x15) ^ have-vb(x13,x15,x16,u39) ^ in-in(e38,x11,x15) ^ for-in(e37,x12,x6) ^ unfortunately-rb(e36,x6) ^ poverty-nn(e35,x6) ^ epidemic-adj(e34,x9) ^ very-rb(e33,x8) ^ few-adj(e32,x8) ^ cure-nn(e31,x8) ^ with-in(e30,x9,x8) ^ like-in(e29,x6,x9) ^ thing(e28,x6) ^ poverty-nn(e27,x4) ^ major-adj(e26,x5) ^ problem-nn(e25,x5) ^ equal(e24,x4,x5) ^ around-in(e23,e26,x1) ^ all(e22,e26) ^ today-nn(e21,x2) ^ on-in(e20,e26,x2) ^ world-nn(e19,x1) ^ america-nn(e17,x0) ^ loc(e18,x0) ^ !=(e17,e18) ^ !=(e49,e24) ^ !=(e44,e28) ^ !=(e47,e41,e38) ^ TS#POVERTY(x15) ^ T#ECONOMIC-INEQUALITY(_12) ^ S#DISEASE(_14) ^ SS#EPIDEMIC(e34) ^ S#DISEASE(_15) ^ SS#CURE(x8) ^ TS#POVERTY(x4) ^ T#ECONOMIC-INEQUALITY(_16) ^ I#DISEASE(_14) ^ I#CURE(x8) ^ M#CAUSE-NOT-FUNCTION(_17) ^ M#CAUSING-THING_F(_14,_17) ^ M#CAUSE-NOT-EXIST(_19) ^ M#CAUSING-THING_E(x8,_19) ^ =(x6,x4,x15) ^ =(e48,e35) ^ =(_12,_13,_16) ^ =(_14,_15)", 
        "id": "5", 
        "targetFrameElementSentence": "POVERTY[poverty,poverty]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "PUNISHMENT[punishment],CRIME[crime]", 
                "explanation": "AGAINST-SOCIETY-ACTION[crime]", 
                "sourceInLm": false, 
                "target": "POVERTY[poverty]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "POVERTY", 
        "targetConceptSubDomain": "POVERTY", 
        "sourceConceptSubDomain": "", 
        "sourceFrameElementSentence": "PUNISHMENT[punishment],CRIME[crime]", 
        "isiDescription": "", 
        "sourceFrame": "PUNISHMENT, CRIME", 
        "isiAbductiveExplanation": "poverty-nn(e12,x1) ^ punishment-nn(e11,x2) ^ crime-nn(e10,x3) ^ person(e9,x2) ^ not(e7,x4) ^ commit-vb(x4,x2,x3,u8) ^ for-in(e6,x2,x3) ^ like-in(e5,x1,x2) ^ TS#POVERTY(x1) ^ T#ECONOMIC-INEQUALITY(_20) ^ S#PUNISHMENT(x2) ^ S#CRIME(x3) ^ I#PUNISHMENT(x2) ^ I#CRIME(x3) ^ M#AGAINST-SOCIETY-ACTION(x3)", 
        "id": "6", 
        "targetFrameElementSentence": "POVERTY[poverty]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "WAR[war,invasion],FIGHT[war,invasion,soldier]", 
                "explanation": "CAUSE-NOT-EXIST[_23], CAUSING-THING_E[soldier,invasion,war; _23]", 
                "sourceInLm": false, 
                "target": "TAXATION[tax]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "TAXATION", 
        "targetConceptSubDomain": "TAXATION", 
        "sourceConceptSubDomain": "FIGHT", 
        "sourceFrameElementSentence": "WAR[war,invasion],FIGHT[war,invasion,soldier]", 
        "isiDescription": "", 
        "sourceFrame": "WAR", 
        "isiAbductiveExplanation": "tax-nn(e42,x2) ^ war-nn(e41,x12) ^ subset_of(e40,x12,x13) ^ easy-nn(e38,x11) ^ nam(e39,x11) ^ card(e37,x11,2) ^ support-nn(e36,x10) ^ of-in(e35,x11,x10) ^ increase-nn(e34,x11) ^ subset_of(e33,x11,x13) ^ like-in(e32,x2,x13) ^ when(e31,e41,e14) ^ not(e14,x3) ^ person(e30,x4) ^ taxes/easy-nn(e29,x6) ^ of-in(e28,x7,x6) ^ card(e27,x7,2) ^ support-nn(e26,x5) ^ of-in(e25,x7,x5) ^ invasion-nn(e24,x7) ^ your(e23,x4) ^ in-in(e22,x7,x4) ^ when(e21,x7) ^ not(e16,x9) ^ relate-vb(x9,u19,x7,u20) ^ soldier-nn(e18,x8) ^ to-in(e17,x9,x8) ^ pay-vb(x3,x4,x7,u15) ^ !=(e38,e39) ^ !=(e35,e28,e25) ^ !=(e31,e21) ^ !=(e40,e33) ^ !=(e14,e16) ^ !=(e37,e27) ^ TS#TAXATION(x2) ^ T#ECONOMIC-INEQUALITY(_21) ^ S#WAR(x12) ^ SS#FIGHT(x12) ^ S#WAR(x7) ^ SS#FIGHT(x7) ^ S#WAR(_22) ^ SS#FIGHT(x8) ^ I#FIGHT(x12) ^ M#CAUSE-NOT-EXIST(_23) ^ M#CAUSING-THING_E(x12,_23) ^ =(_22,x12,x8,x7) ^ =(e26,e36) ^ =(x10,x5)", 
        "id": "8", 
        "targetFrameElementSentence": "TAXATION[tax]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "PUNISHMENT[fine]", 
                "explanation": "", 
                "sourceInLm": false, 
                "target": "TAXATION[tax]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "TAXATION", 
        "targetConceptSubDomain": "TAXATION", 
        "sourceConceptSubDomain": "", 
        "sourceFrameElementSentence": "PUNISHMENT[fine]", 
        "isiDescription": "", 
        "sourceFrame": "PUNISHMENT", 
        "isiAbductiveExplanation": "tax-nn(e11,x1) ^ fine-nn(e10,x5) ^ equal(e9,x5,x4) ^ right-nn(e8,x3) ^ do-vb(x2,x4,x3,u7) ^ like-in(e6,x1,x5) ^ TS#TAXATION(x1) ^ T#ECONOMIC-INEQUALITY(_26) ^ S#PUNISHMENT(x5) ^ I#PUNISHMENT(x5)", 
        "id": "9", 
        "targetFrameElementSentence": "TAXATION[tax]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "CONFINEMENT[trap],WAR[struggle],RESTRAINTS[trap],FIGHT[struggle]", 
                "explanation": "CAUSE-NOT-FUNCTION[_28], CAUSING-THING_F[poverty,trap; _28], CAUSE-NOT-EXIST[_29], CAUSING-THING_E[struggle,struggle; _29]", 
                "sourceInLm": false, 
                "target": "POVERTY[poverty]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "POVERTY", 
        "targetConceptSubDomain": "POVERTY", 
        "sourceConceptSubDomain": "RESTRAINTS, FIGHT", 
        "sourceFrameElementSentence": "CONFINEMENT[trap],WAR[struggle],RESTRAINTS[trap],FIGHT[struggle]", 
        "isiDescription": "", 
        "sourceFrame": "CONFINEMENT, WAR", 
        "isiAbductiveExplanation": "poverty-nn(e23,x0) ^ bear-nn(e22,x6) ^ of-in(e21,x7,x6) ^ trap-nn(e20,x7) ^ you(e19,x4) ^ struggle-nn(e18,x4) ^ subset_of(e17,x4,x5) ^ struggle-nn(e16,x3) ^ subset_of(e15,x3,x5) ^ rel(e14,x7,x5) ^ equal(e13,x0,x7) ^ neuter(e12,x0) ^ not(e8,x2) ^ come-vb(x2,x0,u10,u11) ^ off-rb(e9,x2) ^ !=(e17,e15) ^ TS#POVERTY(x0) ^ T#ECONOMIC-INEQUALITY(_27) ^ S#CONFINEMENT(x7) ^ SS#RESTRAINTS(x7) ^ S#WAR(x4) ^ SS#FIGHT(x4) ^ I#CONFINEMENT(x7) ^ I#FIGHT(x4) ^ M#CAUSE-NOT-FUNCTION(_28) ^ M#CAUSING-THING_F(x7,_28) ^ M#CAUSE-NOT-EXIST(_29) ^ M#CAUSING-THING_E(x4,_29) ^ =(e18,e16) ^ =(x3,x4)", 
        "id": "10", 
        "targetFrameElementSentence": "POVERTY[poverty]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "CRIME[prostitute]", 
                "explanation": "AGAINST-SOCIETY-ACTION[prostitute]", 
                "sourceInLm": false, 
                "target": "POVERTY[poverty]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "POVERTY", 
        "targetConceptSubDomain": "POVERTY", 
        "sourceConceptSubDomain": "", 
        "sourceFrameElementSentence": "CRIME[prostitute]", 
        "isiDescription": "", 
        "sourceFrame": "CRIME", 
        "isiAbductiveExplanation": "poverty-nn(e15,x1) ^ like-in(e14,x1,x3) ^ prostitute-nn(e13,x4) ^ person(e12,x4) ^ of-in(e11,x7,x4) ^ child-nn(e10,x7) ^ feed-vb(x6,x4,x7,u9) ^ equal(e8,x3,x4) ^ TS#POVERTY(x1) ^ T#ECONOMIC-INEQUALITY(_31) ^ S#CRIME(x4) ^ I#CRIME(x4) ^ M#AGAINST-SOCIETY-ACTION(x4)", 
        "id": "12", 
        "targetFrameElementSentence": "POVERTY[poverty]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "BODY-OF-WATER[sea-water],DRINK[drink],THIRST[thirstier]", 
                "explanation": "SATISFY-NEED[thirstier,drink], SATISFY-AGENT[wealth; thirstier,drink], SATISFY-OBJECT[wealth; thirstier,drink], NEED[drink,thirstier]", 
                "sourceInLm": false, 
                "target": "WEALTH[wealth]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "WEALTH", 
        "targetConceptSubDomain": "WEALTH", 
        "sourceConceptSubDomain": "DRINK, THIRST", 
        "sourceFrameElementSentence": "BODY-OF-WATER[sea-water],DRINK[drink],THIRST[thirstier]", 
        "isiDescription": "", 
        "sourceFrame": "BODY-OF-WATER", 
        "isiAbductiveExplanation": "sea-water-nn(e17,x6) ^ like-in(e16,x0,x6) ^ thing(e15,x4) ^ more-rb(e14,x4) ^ become-vb(x3,x0,x1,u13) ^ drink-vb(x2,x0,x1,u12) ^ the(e11,x2,x4) ^ wealth-nn(e9,x0) ^ org(e10,x0) ^ thirstier-adj(e8,x1) ^ person(e7,x0) ^ !=(e9,e10) ^ S#BODY-OF-WATER(x6) ^ S#BODY-OF-WATER(_32) ^ SS#DRINK(x2,x1) ^ R#DRINKER(x0,x2) ^ R#MATTER(x1,_32) ^ TS#WEALTH(x0) ^ T#ECONOMIC-INEQUALITY(_33) ^ S#BODY-OF-WATER(_34) ^ SS#THIRST(e8,_34) ^ R#DRINKER(x1,e8) ^ I#BODY-OF-WATER(_32) ^ I#DRINK(x2,x1) ^ I#THIRST(e8,_34) ^ M#SATISFY-NEED(x2) ^ M#SATISFY-AGENT(x1,x2) ^ M#SATISFY-OBJECT(x0,x2) ^ M#SATISFY-NEED(x2) ^ M#SATISFY-AGENT(x1,x2) ^ M#NEED(e8) ^ =(x6,_32,_34) ^ =(e8,x2) ^ =(x1,x0)", 
        "id": "13", 
        "targetFrameElementSentence": "WEALTH[wealth]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "BODY-OF-WATER[water],BODY-OF-WATER-MOVEMENT[flow,flow]", 
                "explanation": "", 
                "sourceInLm": false, 
                "target": "WEALTH[wealth]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "WEALTH", 
        "targetConceptSubDomain": "WEALTH", 
        "sourceConceptSubDomain": "BODY-OF-WATER-MOVEMENT", 
        "sourceFrameElementSentence": "BODY-OF-WATER[water],BODY-OF-WATER-MOVEMENT[flow,flow]", 
        "isiDescription": "", 
        "sourceFrame": "BODY-OF-WATER", 
        "isiAbductiveExplanation": "event(e33,x3) ^ water-nn(e32,x8) ^ like-in(e31,x0,x8) ^ imp(e24,x9,x10) ^ become-vb(x10,x0,u29,u30) ^ brackish-adj(e28,x0) ^ rel(e27,x10,x8) ^ obstruct-vb(x9,u25,x1,u26) ^ rel(e23,x3,x0) ^ imp(e16,x5,e22) ^ event(e22,x7) ^ flow-vb(x5,x0,x6,u21) ^ become-vb(x6,x0,u19,u20) ^ sweet-adj(e18,x0) ^ fresh-adj(e17,x0) ^ wealth-nn(e14,x0) ^ org(e15,x0) ^ of-in(e13,x1,x0) ^ flow-nn(e12,x1) ^ neuter(e11,x0) ^ !=(e14,e15) ^ !=(e24,e16) ^ !=(e27,e23) ^ !=(e33,e22) ^ S#BODY-OF-WATER(x8) ^ S#BODY-OF-WATER(_35) ^ SS#BODY-OF-WATER-MOVEMENT(x5) ^ R#STREAMING(x0,x5) ^ TS#WEALTH(x0) ^ T#ECONOMIC-INEQUALITY(_36) ^ S#BODY-OF-WATER(_37) ^ SS#BODY-OF-WATER-MOVEMENT(x1) ^ I#BODY-OF-WATER(_35) ^ I#BODY-OF-WATER-MOVEMENT(x5) ^ =(_35,_37,x8) ^ =(u19,u29) ^ =(u20,u30) ^ =(x10,x6) ^ =(x1,x5)", 
        "id": "14", 
        "targetFrameElementSentence": "WEALTH[wealth]"
    }, 
    {
        "targetConceptDomain": "ECONOMIC-INEQUALITY", 
        "annotationMappings": [
            {
                "source": "MATERIAL[tax],CUT[cut]", 
                "explanation": "CAUSE-REDUCE[cut], REDUCED[tax; cut]", 
                "sourceInLm": false, 
                "target": "TAXATION[tax]", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "TAXATION", 
        "targetConceptSubDomain": "TAXATION", 
        "sourceConceptSubDomain": "CUT", 
        "sourceFrameElementSentence": "MATERIAL[tax],CUT[cut]", 
        "isiDescription": "", 
        "sourceFrame": "MATERIAL", 
        "isiAbductiveExplanation": "thing(e17,x5) ^ person(e16,x4) ^ let-vb(x3,x5,x6,u15) ^ start-vb(x6,x4,u13,u14) ^ with-in(e12,x6,x1) ^ bush-nn(e10,x1) ^ org(e11,x1) ^ tax-nn(e9,x0) ^ of-in(e8,x1,x0) ^ cut-nn(e7,x1) ^ !=(e10,e11) ^ TS#TAXATION(x0) ^ T#ECONOMIC-INEQUALITY(_38) ^ S#MATERIAL(x0) ^ SS#CUT(e7,x0) ^ I#MATERIAL(x0) ^ I#CUT(e7,x0) ^ M#CAUSE-REDUCE(e7) ^ M#REDUCED(x0,e7)", 
        "id": "15", 
        "targetFrameElementSentence": "TAXATION[tax]"
    }, 
    {
        "targetConceptDomain": "", 
        "annotationMappings": [
            {
                "source": "GROW[growth]", 
                "explanation": "INCREASED[_39]", 
                "sourceInLm": false, 
                "target": "", 
                "targetInLm": false
            }
        ], 
        "targetFrame": "", 
        "targetConceptSubDomain": "", 
        "sourceConceptSubDomain": "GROW", 
        "sourceFrameElementSentence": "GROW[growth]", 
        "isiDescription": "", 
        "sourceFrame": "ORGANISM", 
        "isiAbductiveExplanation": "even-rb(e8,x2) ^ modest-adj(e7,x2) ^ economic-adj(e6,x2) ^ growth-nn(e5,x2) ^ difference-nn(e4,x1) ^ make-vb(x0,x2,x1,u3) ^ S#ORGANISM(_39) ^ SS#GROW(e5,_39) ^ I#ORGANISM(_39) ^ I#GROW(e5,_39) ^ M#INCREASED(_39)", 
        "id": "16", 
        "targetFrameElementSentence": ""
    }
]