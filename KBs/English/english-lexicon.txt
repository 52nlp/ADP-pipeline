; ENGLISH LEXICAL AXIOMS FOR CONFLICT, WAR, SPORTS, COMPETITION

; CHANGE LOG
; 10/31/2012 aks - created file by moving English lexical items out of conflict kb
;
;
;
; QUESTIONS
; 10/31/2012 aks
; 1. how to tell for sure when a rule should be entered as a lexical item? E.G. "combat is a conflict" could be (=> (conflict e :1.2)(combat e)) or (=> (conflict e :0.9)(combat-nn e1))
;    ANS: prefer lexical synonyms when possible, to keep the concept vocabulary small
; 2. What is the total weight for the lhs of lexical rules? 0.9?
;    ANS: 0.9
; 3. in rule "target", how to add role for adversaries?
;    ANS: removed "target" concept and moved into "aim" concept
; 11/2 aks
; 1. all lexical predicates ( *-nn, *-vb, etc.) start with an existence argument eN. Should the conceptual predicates also have existence args? That is, do we require (green e1 x) rather than (green x) to represent "x is green"?
;     ANS: no need to have an e arg for all.
; 2. shortcuts for synonyms, e.g. directly from slapp-nn to (attack) in addition to slap-nn to (slap)
;    ANS: prefer to use lexical synonyms and leave out conceptual paths
; 3. target-aim-train are all similar, shall we use just one predicate and make the others lexical synonyms?
;    ANS: yes, remove target and train, leave only "aim" as a concept and map the others lexically
;     
; 11/9 aks
; 1. "one type of x is a y" does x or y got on the LHS of the rule?
;
;
; ARGUMENT LISTS BY POS
; (*-vb e x y u) : e - eventuality; x - subj; y - dirobj; u - iobj
; (*-nn e x) : e - eventuality; x - subj
; (*-in e x) : e - head (vb/noun); x - dependent
;


;;; ENGLISH LEXICAL AXIOMS FOR CONFLICT-WAR-SPORTS

;;; CONFLICT

(B (name conflict-nn) (=> (conflict e :0.9)(conflict-nn e w)))

; Combat is conflict.

(B (name combat-nn1) (=> (conflict e :0.9) (combat-nn e x)))

(B (name combat-vb1) (=> (^ (conflict e :0.3) (adversary e1 y x e :0.6)) (combat-vb e x y u)))

; A fight is a conflict.

(B (name fight-nn1) (=> (conflict e :0.9) (fight-nn e x)))

(B (name fight-vb1) (=> (^ (conflict e :0.3) (adversary e1 y x e :0.9)) (fight-vb e x y u)))

;;; ADVERSARY

(B (name adversary-nn1) (=> (adversary x y e :0.9)(adversary-nn e1 x)))

; Enemies are adversaries.

(B (name enemy-nn1) (=> (^ (conflict e :0.6) (adversary x y e :0.3)) (enemy-nn e1 x)))

(B (name enemy-nn2) (=> (^ (conflict e :0.6) (adversary x y e :0.3)) (^ (enemy-nn e1 x) (of-in e2 x y))))

; Adversaries have goals

(B (name goal-nn) (=> (goal e1 g x :0.9)(goal-nn e1 g)))

(B (name wants-goal-vb) (=> (goal e1 g x :0.9)(want-vb e1 x g u)))

;;; ATTACK

; An attack.

(B (name attack-nn1) (=> (attack e1 x y :0.9) (attack-nn e1 x)))

(B (name attack-vb1) (=> (attack e1 x y :0.9) (attack-vb e1 x y u)))

(B (name attack-nn2) (=> (attack e1 x y :0.9) (^ (launch-vb e1 x z u) (attack-nn e2 w))))

(B (name attack-nn3) (=> (attack e1 x y :0.9) (^ (attack-nn e1 x) (on-in e2 x y))))

; A barrage is an attack.

(B (name barrage-nn1) (=> (attack e1 w y :0.9) (barrage-nn e1 x)))

; A slap is an attack.

(B (name slap-vb1) (=> (slap e1 x y :0.9) (slap-vb e1 x y u)))

(B (name slap-nn1) (=> (slap e1 x y :0.9) (slap-nn e1 x)))

(B (name slap-vb1) (=> (slap e1 x y :0.9) (slap-vb e1 x y u)))

(B (name slap-nn1) (=> (slap e1 x y :0.9) (slap-nn e1 x)))

; To shoot a gun is an attack. Update: to use a gun is to shoot.

(B (name use-vb1) (=> (use e1 x w :0.9)(use-vb e1 x w u)))

(B (name shoot-vb1) (=> (^ (gun w :0.3) (use e1 x w :0.6)) (shoot-vb e1 x y w)))

(B (name shoot-vb2) (=> (attack e1 x y :0.9) (^ (shoot-vb e1 x y w) (at-in e2 e1 y))))

(B (name shoot-vb3) (=> (attack e1 x y :0.9) (^ (shoot-vb e1 x w y) (at-in e2 e1 y))))

;;; AIM

; Aim a weapon at a target.

(B (name aim-vb1) (=> (aim e1 x w y :0.9) (^ (aim-vb e1 x w u) (at-in e2 e1 y))))

(B (name aim-vb2) (=> (aim e1 x w y :0.9) (aim-vb e1 x w u)))

; To train a weapon on a target is to aim at the target.

(B (name train-vb1) (=> (aim e1 x w y :0.9) (^ (train-vb e1 x w u) (on-in e2 e1 y))))

; To target something is to aim at it.

(B (name target-vb) (=> (aim e1 x w y :0.9) (target-vb e1 x y w)))

(B (name target-nn) (=> (aim e1 x w y :0.9) (^ (target-nn e1 x) (of-in e2 e1 w))))

;;; WEAPON

; weapon 

(B (name weapon-nn) (=> (weapon w :0.9) (weapon-nn e1 w)))

; bullet

(B (name bullet-nn) (=> (bullet w :0.9) (bullet-nn e1 w)))

; rifle

(B (name rifle-nn) (=> (rifle w :0.9) (rifle-nn e1 w)))

; gun 

(B (name gun-nn) (=> (gun w :0.9) (gun-nn e1 w)))

; sight 

(B (name sight-nn) (=> (sight w :0.9) (sight-nn e1 w)))

; crosshairs

(B (name crosshairs-nn) (=> (crosshairs w :0.9) (crosshairs-nn e1 w)))

;;;; ENGLISH LEXICAL AXIOMS FOR WAR

(B (name war-nn) (=> (war w :0.9) (war-nn e w)))

;A betrayal is when members of groups defect.

;;;; ENGLISH LEXICAL AXIOMS FOR COMPETITION/SPORTS

(B (name compete-vb1) (=> (compete e1 x y c :0.9)(compete-vb e x y u)))

(B (name competitor-nn1) (=> (compete e1 x y c :0.9)(competitor-nn e x)))

(B (name competitor-nn2) (=> (compete e1 x y c :0.9)(competitor-nn e y)))

(B (name competition-nn3) (=> (compete e1 x y w :0.9)(competition e w)))


;;;; OTHER ENGLISH LEXICAL AXIOMS

(B (name president-nn) (=> (president x :0.9) (president-nn e1 x)))

(B (name union-nn) (=> (union x :0.9)(union-nn w x)))

(B (name members-nn) (=> (members m g :0.9)(^ (member-nn e1 m)(of-in e2 e1 g))))

(B (name members-nn) (=> (members m g :0.9)(member-nn e1 m)))

(B (name not-rb) (=> (not g h :0.9)(not-rb e1 x)))

(B (name part-nn) (=> (part u w :0.9)(^ (part-nn e1 x)(of-in e2 e1 w))))

(B (name thrive-vb) (=> (thrive e1 m :0.9)(thrive-vb e2 m y u)))

