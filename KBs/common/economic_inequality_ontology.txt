; DISEASE 

(B (name disease)(=> (^(M#CAUSE-NOT-FUNCTION e0 :0.3)(M#CAUSING-THING-F x e0 :0.3)(M#FUNCTION-AGENT y e0 :0.3)) (^ (I#DISEASE x)(R#SICK y x))))

(B (name disease2) (=> (^(M#CAUSE-NOT-FUNCTION e0 :0.45)(M#CAUSING-THING-F x e0 :0.45)) (I#DISEASE x)))

(B (name cure)(=> (^(M#CAUSE-NOT-EXIST e1 :0.3)(M#CAUSING-THING_E y e1 :0.3)(M#EXISTING-THING x e1 :0.3)) (^ (I#CURE e0)(R#CURE-AGENT y e0)(R#SICK x d)(S#DISEASE d))))

(B (name cure2)(=> (^(M#CAUSE-NOT-EXIST e1 :0.46)(M#CAUSING-THING_E y e1 :0.46)) (^ (I#CURE e0)(R#CURE-AGENT y e0))))

(B (name cure3)(=> (^(M#CAUSE-NOT-EXIST e1 :0.48)(M#CAUSING-THING_E e0 e1 :0.48)) (I#CURE e0)))

; BASE 

(B (name base)(=> (^(M#SUPPORT e1 :0.3)(M#SUPPORTER z e1 :0.3) (M#SUPPORTED y e1 :0.3)) (^(I#BASE x)(R#BASE-AGENT z x)(R#BASE-STRUCTURE y x))))

(B (name base1)(=> (^(M#SUPPORT e1 :0.33)(M#SUPPORTER x e1 :0.33) (M#SUPPORTED y e1 :0.33)) (^(I#BASE x)(R#BASE-STRUCTURE y x))))

(B (name base2)(=> (^(M#SUPPORT e1 :0.45)(M#SUPPORTER x e1 :0.45)) (I#BASE x))) 

; WAR 

(B (name fight)(=> (^(M#CAUSE-NOT-EXIST e1 :0.3)(M#CAUSING-THING_E z e1 :0.3)(M#EXISTING-THING y e1 :0.3)) (^(I#FIGHT x)(R#WAR-ENEMY y x)(R#WAR-AGENT z x))))

(B (name fight2)(=> (^(M#CAUSE-NOT-EXIST e1 :0.32)(M#EXISTING-THING y e1 :0.32)(M#CAUSING-THING_E x e1 :0.32)) (^(I#FIGHT x)(R#WAR-ENEMY y x))))

(B (name fight3)(=> (^(M#CAUSE-NOT-EXIST e1 :0.46)(M#CAUSING-THING_E z e1 :0.46)) (^(I#FIGHT x)(R#WAR-AGENT z x))))

(B (name fight4)(=> (^(M#CAUSE-NOT-EXIST e1 :0.48)(M#CAUSING-THING_E x e1 :0.48)) (I#FIGHT x)))


(B (name enemy)(=> (^(M#CAUSE-NOT-FUNCTION e1 :0.3)(M#CAUSING-THING-F x e1 :0.3)(M#FUNCTION-AGENT z e1 :0.3)) (^ (I#ENEMY x e0)(R#WAR-AGENT z e0))))

(B (name enemy2)(=> (^(M#CAUSE-NOT-FUNCTION e1 :0.45)(M#CAUSING-THING-F x e1 :0.45)) (I#ENEMY x e0)))


; BODY OF WATER 


(B (name body_of_water-type)(=> (M#LARGE-AMOUNT-OF y :0.8) (^(I#BODY-OF-WATER-TYPE x)(R#MATTER y x))))

(B (name drink)(=> (^(M#SATISFY-NEED e0 :0.3) (M#SATISFY-AGENT m e0 :0.3) (M#SATISFY-OBJECT d e0 :0.3)) (^(I#DRINK e0 w)(R#DRINKER d e0)(R#MATTER m w))))

(B (name drink2)(=> (^(M#SATISFY-NEED e0 :0.31) (M#SATISFY-AGENT w e0 :0.31) (M#SATISFY-OBJECT d e0 :0.31)) (^(I#DRINK e0 w)(R#DRINKER d e0))))

(B (name drink3)(=> (^(M#SATISFY-NEED e0 :0.46) (M#SATISFY-AGENT m e0 :0.46)) (^(I#DRINK e0 w)(R#MATTER m w))))

(B (name drink4)(=> (^(M#SATISFY-NEED e0 :0.47) (M#SATISFY-AGENT w e0 :0.47)) (I#DRINK e0 w)))

(B (name satisfy-need)(=> (^(M#HAVE-NEED e1 :0.3)(M#NEEDY n e1 :0.3)(M#NEED x :0.3)) (^(M#SATISFY-NEED e0)(M#SATISFY-OBJECT n e0))))

(B (name satisfy-need2)(=> (^(M#HAVE-NEED e1 :0.46)(M#NEED x :0.46)) (M#SATISFY-NEED e0)))


(B (name thirst)(=> (M#NEED x :0.9) (I#THIRST x y)))


(B (name drought)(=> (^(M#NOT-EXIST e0 :0.45)(M#EXISTING-THING x e0 :0.45)) (^(I#DROUGHT e2 u)(R#STREAMING x e2))))

(B (name drought2)(=> (M#NOT-EXIST e0 :0.9) (I#DROUGHT e2 u)))

(B (name shoal) (=> (^(M#NOT-EXIST e0 :0.45)(M#EXISTING-THING x e0 :0.45)) (^(I#SHOAL e2 u)(R#STREAMING x e2))))

(B (name shoal2)(=> (M#NOT-EXIST e0 :0.9) (I#SHOAL e2 u)))

; MOVEMENT
(B (name water-movement) (=>(^(M#LIQUID-MOVE-FREELY e0 :0.3)(M#LIQUID-THING y :0.3))  (^(I#BODY-OF-WATER-MOVEMENT e0)(R#STREAMING x e0))))


; SCHOOL 

(B (name school1)(=> (^(M#CAUSE-UNDERSTAND e0 :0.2)(M#CAUSING-THING_U t e0 :0.2)(M#UNDERSTAND-AGENT z e0 :0.2) (M#UNDERSTAND-THEME y e0 :0.2)) (^(R#SCHOOL-TEACHER t x)(R#SCHOOL-SUBJECT  y x)(R#SCHOOL-STUDENT z x))))

(B (name school2) (=> (^(M#CAUSE-UNDERSTAND e0 :0.3)(M#CAUSING-THING_U t e0 :0.3) (M#UNDERSTAND-THEME y e0 :0.3)) (^(R#SCHOOL-TEACHER t x)(R#SCHOOL-SUBJECT y x))))

(B (name school3) (=> (^(M#CAUSE-UNDERSTAND e0 :0.3)(M#CAUSING-THING_U t e0 :0.3)(M#UNDERSTAND-AGENT z e0 :0.3)) (^(R#SCHOOL-TEACHER t x)(R#SCHOOL-STUDENT z x))))

(B (name school4) (=> (^(M#CAUSE-UNDERSTAND e0 :0.46)(M#CAUSING-THING_U t e0 :0.46))(R#SCHOOL-TEACHER t x)))

(B (name school5) (=> (M#CAUSE-UNDERSTAND e0 :0.95)(I#SCHOOL x)))


; CRIME 

(B (name crime)(=> (^(M#AGAINST-SOCIETY-ACTION e0 :0.3)(M#AGAINST-SOCIETY-ACTOR x e0 :0.3)(M#AGAINST-SOCIETY-ACTION-VICTIM y e0 :0.3)) (^(I#CRIME e0)(R#CRIME-AGENT x e0)(R#CRIME-VICTIM y e0))))

(B (name crime2)(=> (^(M#AGAINST-SOCIETY-ACTION e0 :0.45)(M#AGAINST-SOCIETY-ACTOR x e0 :0.45)) (^(I#CRIME e0)(R#CRIME-AGENT x e0))))

(B (name crime3)(=> (^(M#AGAINST-SOCIETY-ACTION e0 :0.45)(M#AGAINST-SOCIETY-ACTION-VICTIM y e0 :0.45)) (^(I#CRIME e0)(R#CRIME-VICTIM y e0))))

(B (name crime4)(=> (M#AGAINST-SOCIETY-ACTION e0 :0.91) (I#CRIME e0)))

; CONFINEMENT 

(B (name confinement) (=> (^(M#CAUSE-NOT-FUNCTION e1 :0.3)(M#CAUSING-THING-F x e1 :0.3)(M#FUNCTION-AGENT y e1 :0.3)) (^(I#CONFINEMENT e0)(R#CONFINEMENT-AGENT x e0)(R#CONFINEMENT-PATIENT y e0))))

(B (name confinement2) (=> (^(M#CAUSE-NOT-FUNCTION e1 :0.45)(M#CAUSING-THING-F x e1 :0.45)) (^(I#CONFINEMENT e0)(R#CONFINEMENT-AGENT x e0))))

(B (name confinement3) (=> (^(M#CAUSE-NOT-FUNCTION e1 :0.31)(M#CAUSING-THING-F e0 e1 :0.31)(M#FUNCTION-AGENT y e1 :0.31)) (^(I#CONFINEMENT e0)(R#CONFINEMENT-PATIENT y e0))))

(B (name confinement4) (=> (^(M#CAUSE-NOT-FUNCTION e1 :0.47)(M#CAUSING-THING-F e0 e1 :0.47)) (I#CONFINEMENT e0)))

; EXIT
(B (name exit) (=> (^(M#CAUSE-RESUME-FUNCTION e0 :0.9)) (I#EXIT e0)))

; ENABLING 

(B (name enabling) (=> (^(M#CAUSE-FUNCTION e1 :0.3)(M#CAUSING-THING-F x e1 :0.3)(M#FUNCTION y :0.3)) (^(I#ENABLING e0)(R#ENABLING-AGENT x e0)(R#ENABLED y e0))))

(B (name enabling2) (=> (^(M#CAUSE-FUNCTION e1 :0.45)(M#CAUSING-THING-F x e1 :0.45)) (^(I#ENABLING e0)(R#ENABLING-AGENT x e0))))

(B (name enabling3) (=> (^(M#CAUSE-FUNCTION e1 :0.31)(M#CAUSING-THING-F e0 e1 :0.31)(M#FUNCTION y :0.31)) (^(I#ENABLING e0)(R#ENABLED y e0))))

(B (name enabling4) (=> (^(M#CAUSE-FUNCTION e1 :0.47)(M#CAUSING-THING-F e0 e1 :0.47)) (I#ENABLING e0)))

; MATERIAL

(B (name cut) (=> (^(M#CAUSE-REDUCE e0 :0.3)(M#CAUSING-THING-R y e0 :0.3)(M#REDUCED x e0 :0.3)) (^(I#CUT e0 x)(I#MATERIAL x)(R#CUT-AGENT y e0))))
(B (name cut2) (=> (^(M#CAUSE-REDUCE e0 :0.46)(M#REDUCED x e0 :0.46)) (^(I#CUT e0 x)(I#MATERIAL x))))

; ORGANISM

(B (name grow) (=> (M#INCREASED x :0.9) (^(I#GROW e0 x)(I#ORGANISM x))))

; PHYSICAL HARM

(B (name physical-harm) (=>(^(M#CAUSE-HARM e0 :0.3)(M#CAUSING-THING-H x e0 :0.3)(M#HARM-VICTIM y e0 :0.3)) (^(I#PHYSICAL-HARM e0)(R#HARM-AGENT x e0)(R#HARM-VICTIM y e0))))

(B (name physical-harm2) (=>(^(M#CAUSE-HARM e0 :0.46)(M#CAUSING-THING-H x e0 :0.46)) (^(I#PHYSICAL-HARM e0)(R#HARM-AGENT x e0))))

(B (name physical-harm3) (=>(^(M#CAUSE-HARM e0 :0.46)(M#HARM-VICTIM y e0 :0.46)) (^(I#PHYSICAL-HARM e0)(R#HARM-VICTIM y e0))))

(B (name physical-harm4) (=>(M#CAUSE-HARM e0 :0.95) (I#PHYSICAL-HARM e0)))

(B (name physical-protection) (=>(^(M#CAUSE-REDUCE-HARM e0 :0.3)(M#CAUSING-THING-RH x :0.3)) (I#PHYSICAL-PROTECTION e0)))

; ABYSS
(B (name abyss) (=>(^(M#CAUSE-NOT-FUNCTION e0 :0.33)(M#CAUSING-THING-F x e0 :0.33)(M#CAUSE-CONFINEMENT e0 :0.33)) (I#ABYSS x)))

; MAZE
(B (name maze) (=>(^(M#CAUSE-CONFUSION e0 :0.23)(M#CONFUSING-THING x :0.23)(M#CAUSE-CONFINEMENT e0 :0.23)(M#CAUSE-NOT-FUNCTION e0 :0.23)) (I#MAZE x)))
;(B (name maze) (=>(^(M#CAUSE-CONFUSION e0 :0.45)(M#CONFUSING-THING x :0.45)) (I#MAZE x)))

; NAVIGATION

(B (name navigate) (=>(^(M#CAUSE-REDUCE-CONFUSION e0 :0.23)(M#CONFUSING-THING y :0.23)(M#CAUSE-ESCAPE-CONFINEMENT e0 :0.23)(M#CAUSE-RESUME-FUNCTION e0 :0.23))(^(I#NAVIGATION e0)(R#NAVIGATION-AGENT x e0))))

; LOW POINT
(B (name low-point) (=>(^(M#CAUSE-BAD-QUALITY e0 :0.45)(M#CAUSING-THING-Q x :0.45)) (I#LOW-POINT e0)))

; MOVEMENT DOWNWARD
(B (name movement-downward) (=>(^(M#CAUSE-LOSE-QUALITY e0 :0.45)(M#LOSE-Q-PATIENT x e0 :0.45)) (^(I#MOVEMENT-DOWNWARD e0)(R#MOVE-D-PATIENT x e0))))

; MOVEMENT UPWARD
(B (name movement-upward) (=>(^(M#CAUSE-GAIN-QUALITY e0 :0.45)(M#GAIN-Q-PATIENT x e0 :0.45)) (^(I#MOVEMENT-UPWARD e0)(R#MOVE-U-PATIENT x e0))))

; BURDEN
; WEIGHT
(B (name weight) (=>(^(M#CAUSE-NOT-FUNCTION e0 :0.45)(M#CAUSING-THING-F x e0 :0.45)) (I#WEIGHT x)))

; RELIEF
(B(name relief) (=>(^(M#CAUSE-RESUME-FUNCTION e0 :0.45)(M#CAUSING-R-THING x :0.45)) (I#RELIEF)))

;HUMAN-BODY
;DEATH
(B (name death) (=>(^(M#DECREASE-SIZE e0 :0.45)(M#DECREASING-THING x :0.45)) (I#DEATH x)))

;LIVING
;(B (name living) (=>(^(M#CAUSE-ABLE-TO-FUNCTION e0 :0.45)(M#CAUSING-THING-AF x :0.45)) (I#LIVING x)))

;HEALTH
;(B (name health) (=>(^(M#CAUSE-IMPROVE-FUNCTIONALITY e0 :0.45)(M#CAUSING-THING-IF x :0.45)) (I#HEALTH x)))
