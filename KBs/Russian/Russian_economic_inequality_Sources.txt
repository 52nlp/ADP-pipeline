; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SOURCE WORDS;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DISEASE
(B (name bolezn) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45))(болезнь-nn e0 x)))
(B (name zabolevanie) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (заболевание-nn e0 x)))
(B (name nedug) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (недуг-nn e0 x)))
(B (name nedrorovje) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (нездоровье-nn e0 x)))

(B (name nasmork) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (насморк-nn e0 x)))
(B (name rak) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (рак-nn e0 x)))
(B (name chuma) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (чума-nn e0 x)))
(B (name paralich) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (паралич-nn e0 x)))
(B (name prokaza) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (проказа-nn e0 x)))
(B (name jazva) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (язва-nn e0 x)))
(B (name opuhol) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE x :0.45)) (опухоль-nn e0 x)))

; SICK
(B (name bolnoj) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3))(больной-adj e0 y)))
(B (name bolnojn) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (больной-nn e0 y)))
(B (name nezdorovyj) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (нездоровый-adj e0 y)))

(B (name invalid) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (инвалид-nn e0 y)))
(B (name pacient) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (пациент-nn e0 y)))

; OF - DISEASE
(B (name of-disease) (=>(R#SICK  y x :0.9)(^(S#DISEASE x)(of-in e1 x y))))

; BECOME SICK
(B (name bolet) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3))(болеть-vb e0 y u1 u2)))
(B (name zabolet) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (заболеть-vb e0 y u1 u2)))
(B (name razboletsja) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (разболеться-vb e0 y u1 u2)))
(B (name pribolet) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (приболеть-vb e0 y u1 u2)))
(B (name zaneduzhit) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (занедужить-vb e0 y u1 u2)))
(B (name neduzhit) (=>(^(S#DISEASE e0 :0.3)(SS#DISEASE-TYPE x :0.3)(R#SICK y e0 :0.3)) (недужить-vb e0 y u1 u2)))


; TREATMENT
(B (name lechenie) (=>(^(S#DISEASE x :0.45)(SS#TREATMENT e0  :0.45))(лечение-nn e1 e0)))
(B (name terapija) (=>(^(S#DISEASE x :0.45)(SS#TREATMENT e0  :0.45))(терапия-nn e1 e0)))

(B (name diagnoz) (=>(^(S#DISEASE x :0.45)(SS#TREATMENT e0  :0.45))(диагноз-nn e1 e0)))
(B (name diagnostika) (=>(^(S#DISEASE x :0.45)(SS#TREATMENT e0  :0.45))(диагностика-nn e1 e0)))

(B (name doktor) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#CURE-AGENT y e0 :0.3))(доктор-nn e0 y)))
(B (name vrach) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#CURE-AGENT y e0 :0.3))(врач-nn e0 y)))
(B (name lekarstvo) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#CURE-AGENT y e0 :0.3))(лекарство-nn e0 y)))
(B (name medikament) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#CURE-AGENT y e0 :0.3))(медикамент-nn e0 y)))

(B (name lechit) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#CURE-AGENT y e0 :0.3))(лечить-vb e0 y x u2)))
(B (name diagnostirovat) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#CURE-AGENT y e0 :0.3))(диагностировать-vb e0 y x u2)))
(B (name propisat) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#CURE-AGENT y e0 :0.3))(прописать-vb e0 y u1 u2)))

(B (name lechitsja) (=>(^(S#DISEASE x :0.45)(SS#TREATMENT e0 :0.45)) (лечиться-vb e0 x u1 u2)))

(B (name neizlechimyj) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#SICK y e0 :0.3))(неизлечимый-adj e0 y)))
(B (name izlechimyj) (=>(^(S#DISEASE x :0.3)(SS#TREATMENT e0 :0.3)(R#SICK y e0 :0.3)) (излечимый-adj e0 y)))


; OF - TREATMENT
(B (name of-treatment) (=>(S#DISEASE y :0.9)(^(SS#TREATMENT x)(of-in e1 x y))))

; FROM - TREATMENT
(B (name from-treatment) (=>(S#DISEASE y :0.9)(^(SS#TREATMENT x)(от-in e1 xä y))))
 
; CURE

(B (name vylechit) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#CURE-AGENT y e0 :0.3)) (вылечить-vb e0 y x u2)))
(B (name vylechivat) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#CURE-AGENT y e0 :0.3)) (вылечивать-vb e0 y x u2)))
(B (name zalechit) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#CURE-AGENT y e0 :0.3)) (залечить-vb e0 y x u2)))
(B (name vrachevat) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#CURE-AGENT y e0 :0.3)) (врачевать-vb e0 y x u2)))
(B (name zalechivat) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#CURE-AGENT y e0 :0.3)) (залечивать-vb e0 y x u2)))

(B (name izlechitsja) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#SICK y e0 :0.3)) (излечиться-vb e0 y u1 u2)))
(B (name izlechivatsja) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#SICK y e0 :0.3)) (излечиваться-vb e0 y u1 u2)))
(B (name vylechivatsja) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#SICK y e0 :0.3)) (вылечиваться-vb e0 y u1 u2)))

 (B (name vyzdoravlivat) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#SICK y e0 :0.3)) (выздоравливать-vb e0 y u1 u2)))
(B (name vyzdorovet) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#SICK y e0 :0.3)) (выздороветь-vb e0 y u1 u2)))
(B (name popravitsja) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#SICK y e0 :0.3)) (поправиться-vb e0 y u1 u2)))

(B (name idti-na-popravku) (=>(^(S#DISEASE x :0.3)(SS#CURE e0 :0.3)(R#SICK y e0 :0.3)) (^(идти-vb e1 y u1 u2)(на-in e2 e1 e0)(поправка-nn e3 e0))))

(B (name vyzdorovlenie) (=>(^(S#DISEASE x :0.3)(SS#CURE y :0.3)) (выздоровление-nn e0 y)))
(B (name izlechenie) (=>(^(S#DISEASE x :0.3)(SS#CURE y :0.3)) (излечение-nn e0 y)))
(B (name popravka) (=>(^(S#DISEASE x :0.3)(SS#CURE y :0.3)) (поправка-nn e0 y)))

; OF - CURE
(B (name of-cure) (=>(R#SICK y e0 :0.9)(^(SS#CURE x)(of-in e1 x y))))

; FROM - CURE
(B (name from-cure) (=>(S#DISEASE y :0.9)(^(SS#CURE e0)(от-in e1 e0 y))))

; EPIDEMIC
(B (name epidemija) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE y :0.45))(эпидемия-nn e0 y)))
(B (name pandemija) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE y :0.45)) (пандемия-nn e0 y)))
(B (name virus) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE y :0.45))(вирус-nn e0 y)))
(B (name virus) (=>(^(S#DISEASE x :0.45)(SS#DISEASE-TYPE e0 :0.45)) (эпидемический-adj e0 y)))<<

; SYMPTOM
(B (name symptom)  (=>(^(S#DISEASE x :0.45) (SS#SYMPTOMS y :0.45)) (симптом-nn e0 y)))
(B (name symptomatic)  (=>(^(S#DISEASE x :0.45) (SS#SYMPTOMS e0 :0.45)) (симптоматически-adj e0 y)))

(B (name krovotechenie) (=>(^(S#DISEASE x :0.45) (SS#SYMPTOMS y :0.45))(кровотечение-nn e0 y)))
(B (name rana) (=>(^(S#DISEASE x :0.45) (SS#SYMPTOMS y :0.45)) (рана-nn e0 y)))
(B (name bol) (=>(^(S#DISEASE x :0.45) (SS#SYMPTOMS y :0.45)) (боль-nn e0 y)))

(B (name krovotochit) (=>(^(S#DISEASE e0 :0.3)(SS#SYMPTOMS e0 :0.3)(R#SICK y e0 :0.3))(кровоточить-vb e0 y u1 u2)))

; OF - SYMPTOM
;(B (name of-symptom) (=>(S#DISEASE y :0.9)(^(SS#SYMPTOMS x)(of-in e1 x y))))

(B (name dismap)(=>(I#DISEASE x :0.9)(S#DISEASE x)))
(B (name dis-typemap)(=>(I#DISEASE-TYPE x :0.9)(SS#DISEASE-TYPE x)))
(B (name curemap)(=>(I#CURE x :0.9)(SS#CURE x)))
(B (name treatmentmap)(=>(I#TREATMENT x :0.9)(SS#TREATMENT x)))


; BUILDING
(B (name fundament) (=>(^(S#BUILDING y :0.45)(SS#STRUCTURE x  :0.45))(фундамент-nn e0 x)))
(B (name osnova) (=>(^(S#BUILDING y :0.45)(SS#STRUCTURE x  :0.45)) (основа-nn e0 x)))
(B (name opora) (=>(^(S#BUILDING y :0.45)(SS#STRUCTURE x  :0.45)) (опора-nn e0 x)))
(B (name osnova) (=>(^(S#BUILDING y :0.45)(SS#STRUCTURE x  :0.45)) (^(краеугольный-adj e1 x)(камень-nn e0 x))))

;(B (name skelet) (=>(^(S#BUILDING x :0.45)(SS#СКЕЛЕТ/SKELETON x  :0.45)) (скелет-nn e0 x)))
;(B (name hrebet) (=>(^(S#BUILDING x :0.45)(SS#СКЕЛЕТ/SKELETON x  :0.45)) (хребет-nn e0 x)))

;(B (name ukrepit) (=>(^(S#BUILDING u :0.2)(SS#УКРЕПЛЯТЬ/STRENGTHEN e0 :0.2)(R#BASE-STRUCTURE y u :0.2)(R#BASE-AGENT x u :0.2)) (укрепить-vb e0 x y u)))
;(B (name ukrepljat) (=>(^(S#BUILDING u :0.2)(SS#УКРЕПЛЯТЬ/STRENGTHEN e0 :0.2)(R#BASE-STRUCTURE  y u :0.2)(R#BASE-AGENT x u :0.2)) (укреплять-vb e0 x y u)))


; OF - STRUCTURE
(B (name of-structure) (=>(S#BUILDING y :0.9)(^(SS#STRUCTURE x)(of-in e1 x y))))


(B (name buildingmap)(=>(I#BUILDING x :0.9)(S#BUILDING x)))


; BODY-OF-WATER 

(B (name voda) (=>(S#BODY-OF-WATER x :0.9)(вода-nn e0 x)))

; BODY OF WATER
(B (name more) (=> (^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-TYPE x :0.45))(море-nn e0 y)))
(B (name okean) (=> (^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-TYPE x :0.45)) (океан-nn e0 y)))
(B (name reka) (=> (^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-TYPE x :0.45)) (река-nn e0 y)))
(B (name rucheek) (=> (^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-TYPE x :0.45)) (ручеек-nn e0 y)))

; OF - BODY-OF-WATER
(B (name of-body-of-water) (=>(R#MATTER x y :0.9)(^(SS#BODY-OF-WATER-TYPE y)(of-in e1 y x))))

; MOVEMENT 
(B (name potok)  (=>(^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-MOVEMENT y :0.45))(поток-nn e0 y)))
(B (name istochnik)  (=>(^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-MOVEMENT y :0.45))(источник-nn e0 y)))
(B (name tech)  (=>(^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-MOVEMENT y :0.45)) (течь-nn e0 y)))
(B (name utechka)  (=>(^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-MOVEMENT y :0.45)) (утечка-nn e0 y)))
(B (name volna)  (=>(^(S#BODY-OF-WATER x :0.45)(SS#BODY-OF-WATER-MOVEMENT y :0.45)) (волна-nn e0 y)))

(B (name techvb) (=>(^(S#BODY-OF-WATER y :0.3)(SS#BODY-OF-WATER-MOVEMENT e0 :0.3)(R#STREAMING x e0 :0.3))(течь-vb e0 x u1 u2)))
(B (name utech) (=>(^(S#BODY-OF-WATER y :0.3)(SS#BODY-OF-WATER-MOVEMENT e0 :0.3)(R#STREAMING x e0 :0.3))(утечь-vb e0 x u1 u2)))
(B (name utekat)(=>(^(S#BODY-OF-WATER y :0.3)(SS#BODY-OF-WATER-MOVEMENT e0 :0.3)(R#STREAMING x e0 :0.3)) (утекать-vb e0 x u1 u2)))
(B (name vytech) (=>(^(S#BODY-OF-WATER y :0.3)(SS#BODY-OF-WATER-MOVEMENT e0 :0.3)(R#STREAMING x e0 :0.3)) (вытечь-vb e0 x u1 u2)))
(B (name vytekat) (=>(^(S#BODY-OF-WATER y :0.3)(SS#BODY-OF-WATER-MOVEMENT e0 :0.3)(R#STREAMING x e0 :0.3)) (вытекать-vb e0 x u1 u2)))
(B (name litsja) (=>(^(S#BODY-OF-WATER y :0.3)(SS#BODY-OF-WATER-MOVEMENT e0 :0.3)(R#STREAMING x e0 :0.3)) (литься-vb e0 x u1 u2)))
(B (name struitsja) (=>(^(S#BODY-OF-WATER y :0.3)(SS#BODY-OF-WATER-MOVEMENT e0 :0.3)(R#STREAMING x e0 :0.3)) (струиться-vb e0 x u1 u2)))

; OF - MOVEMENT
(B (name of-stream) (=>(R#STREAMING y x :0.9)(^(SS#BODY-OF-WATER-MOVEMENT x e)(of-in e1 x y))))

; SHOAL
(B (name mel) (=>(^(S#ВОДА/WATER x :0.45)(SS#МЕЛЬ/SHOAL y x :0.45))(мель-nn e0 y)))
(B (name melkovodje) (=>(^(S#ВОДА/WATER x :0.45)(SS#МЕЛЬ/SHOAL y x :0.45)) (мелководье-nn e0 y)))
(B (name obmelchat) (=>(^(S#ВОДА/WATER y :0.3)(SS#МЕЛЬ/SHOAL e0 y :0.3)(R#STREAMING x e0 :0.3))(обмельчать-vb e0 x u1 u2)))
(B (name melchat) (=>(^(S#ВОДА/WATER y :0.3)(SS#МЕЛЬ/SHOAL e0 y :0.3)(R#STREAMING x e0 :0.3)) (мельчать-vb e0 x u1 u2)))

; DROUGHT
(B (name vysohnut) (=>(^(S#ВОДА/WATER y :0.3) (SS#ЗАСУХА/DROUGHT e0 y :0.3)(R#STREAMING x e0 :0.3))(высохнуть-vb e0 x u1 u2)))
(B (name vysyhat) (=>(^(S#ВОДА/WATER y :0.3) (SS#ЗАСУХА/DROUGHT e0 y :0.3)(R#STREAMING x e0 :0.3)) (высыхать-vb e0 x u1 u2)))
(B (name peresohnut) (=>(^(S#ВОДА/WATER y :0.3) (SS#ЗАСУХА/DROUGHT e0 y :0.3)(R#STREAMING x e0 :0.3)) (пересохнуть-vb e0 x u1 u2)))
(B (name peresyhat) (=>(^(S#ВОДА/WATER y :0.3) (SS#ЗАСУХА/DROUGHT e0 y :0.3)(R#STREAMING x e0 :0.3)) (пересыхать-vb e0 x u1 u2)))
(B (name zaesohnut) (=>(^(S#ВОДА/WATER y :0.3) (SS#ЗАСУХА/DROUGHT e0 y :0.3)(R#STREAMING x e0 :0.3)) (засохнуть-vb e0 x u1 u2)))
(B (name zaresyhat) (=>(^(S#ВОДА/WATER y :0.3) (SS#ЗАСУХА/DROUGHT e0 y :0.3)(R#STREAMING x e0 :0.3)) (засыхать-vb e0 x u1 u2)))

; DRINK
(B (name pit) (=>(^(S#BODY-OF-WATER u :0.2)(SS#DRINK e0 :0.2)(R#DRINKER x e0 :0.2)(R#MATTER y u :0.2))  (пить-vb e0 x y u2)))
(B (name vypit) (=>(^(S#BODY-OF-WATER u :0.2)(SS#DRINK e0 :0.2)(R#DRINKER x e0 :0.2)(R#MATTER y u :0.2)) (выпить-vb e0 x y u2)))
(B (name napitsja) (=>(^(S#WATER u :0.3)(SS#DRINK e0 :0.3)(R#DRINKER x e0 :0.3)) (напиться-vb e0 x u1 u2)))
(B (name utolit-zhazhdu) (=>(^(S#WATER u :0.3)(SS#DRINK e0 :0.3)(R#DRINKER x e0 :0.3))(^(утолить-vb e0 x z u2)(жажда-nn e2 z))))
(B (name utoljat-zhazhdu) (=>(^(S#WATER u :0.3)(SS#DRINK e0 :0.3)(R#DRINKER x e0 :0.3)) (^(утолять-vb e0 x z u2)(жажда-nn e2 z))))

; THIRST
(B (name zhazhda) (=>(^(S#BODY-OF-WATER y :0.3) (SS#THIRST x :0.3)(R#DRINKER x e0 :0.3))(жажда-nn e0 x)))

; OF - THIRST
(B (name of-thirst) (=>(R#THIRST-OBJECT y x :0.9)(^(SS#THIRST x)(of-in e1 x y))))


(B (name watermap)(=>(I#BODY-OF-WATER x :0.9)(S#BODY-OF-WATER x)))
(B (name watertypemap)(=>(I#BODY-OF-WATER-TYPE x :0.9)(SS#BODY-OF-WATER-TYPE x)))
(B (name drinkmap)(=>(I#DRINK x y :0.9)(SS#DRINK x y)))
(B (name thirstmap)(=>(I#THIRST x y :0.9)(SS#THIRST x y)))
(B (name streammap)(=>(I#BODY-OF-WATER-MOVEMENT x :0.9)(SS#BODY-OF-WATER-MOVEMENT x)))

; MATERIAL

; CUT
(B (name урезать) (=>(^(S#MATERIAL y :0.3)(SS#CUT e0 y :0.3)(R#CUT-AGENT x e0 :0.3))(урезать-vb e0 x y u2)))

(B (name materialmap)(=>(I#MATERIAL x :0.9)(S#MATERIAL x)))
(B (name cutmap)(=>(I#CUT x y :0.9)(SS#CUT x y)))

; STRUGGLE

(B (name vojna) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (война-nn e0 x)))
(B (name borba) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (борьба-nn e0 x)))
(B (name bitva) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (битва-nn e0 x)))
(B (name boj) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (бой-nn e0 x)))
(B (name srazhenie) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (сражение-nn e0 x)))
(B (name razgrom) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (разгром-nn e0 x)))


(B (name ataka) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (атака-nn e0 x)))
(B (name napadenie)(=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (нападение-nn e0 x)))
(B (name nastuplenie) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45))(наступление-nn e0 x)))
(B (name shturm) (=>(^(S#BATTLE x :0.45)(SS#FIGHT x :0.45)) (штурм-nn e0 x)))
(B (name udar-po) (=>(^(S#BATTLE x :0.3)(SS#FIGHT x :0.3)(SS#ENEMY y x :0.3)) (^(удар-nn e0 x)(по-in e1 x y))))

(B (name pobeda) (=>(^(S#BATTLE x :0.3) (SS#FIGHT x :0.3)(SS#ENEMY y x :0.3))(^(победа-nn e0 x)(над-in e1 x y))))
(B (name preodolenie) (=>(^(S#BATTLE x :0.3) (SS#FIGHT x :0.3)(SS#ENEMY y x :0.3)) (^(преодоление-nn e0 x)(of-in e1 x y))))

(B (name voevat) (=>(^(S#BATTLE e0 :0.3) (SS#FIGHT e0 :0.3)(R#BATTLE-AGENT x e0 :0.3))(воевать-vb e0 x u1 u2)))
(B (name borotsja)(=>(^(S#BATTLE e0 :0.3) (SS#FIGHT e0 :0.3)(R#BATTLE-AGENT x e0 :0.3)) (бороться-vb e0 x u1 u2)))
(B (name bitsja) (=>(^(S#BATTLE e0 :0.3) (SS#FIGHT e0 :0.3)(R#BATTLE-AGENT x e0 :0.3)) (биться-vb e0 x u1 u2)))
(B (name srazhatsja) (=>(^(S#BATTLE e0 :0.3) (SS#FIGHT e0 :0.3)(R#BATTLE-AGENT x e0 :0.3)) (сражаться-vb e0 x u1 u2)))
(B (name dratsja) (=>(^(S#BATTLE e0 :0.3) (SS#FIGHT e0 :0.3)(R#BATTLE-AGENT x e0 :0.3))(драться-vb e0 x u1 u2)))

(B (name atakovat) (=>(^(S#BATTLE u :0.2) (SS#FIGHT e0 :0.2)(R#BATTLE-AGENT x e0 :0.2) (SS#ENEMY y e0 :0.2)) (атаковать-vb e0 x y u2)))
(B (name napadat-na) (=>(^(S#BATTLE u :0.3) (SS#FIGHT e0 :0.3)(R#BATTLE-AGENT x e0 :0.3))(нападать-vb e0 x u1 u2)))
(B (name napast-na) (=>(^(S#BATTLE u :0.3) (SS#FIGHT e0 :0.3)(R#BATTLE-AGENT x e0 :0.3)) (напасть-vb e0 x u1 u2)))


(B (name pobedit) (=>(^(S#BATTLE e0 :0.2) (SS#FIGHT e0 :0.2)(R#BATTLE-AGENT x e0 :0.2) (SS#ENEMY y e0 :0.2))(победить-vb e0 x y u2)))
(B (name pobezhdat) (=>(^(S#BATTLE e0 :0.2) (SS#FIGHT e0 :0.2)(R#BATTLE-AGENT x e0 :0.2) (SS#ENEMY y e0 :0.2)) (побеждать-vb e0 x y u2)))
(B (name preodolet) (=>(^(S#BATTLE e0 :0.2) (SS#FIGHT e0 :0.2)(R#BATTLE-AGENT x e0 :0.2) (SS#ENEMY y e0 :0.2)) (преодолеть-vb e0 x y u2)))

(B (name borba-s) (=> (SS#ENEMY y x :0.9)(^(SS#FIGHT x)(с-in x y))))
(B (name borba-protiv) (=> (SS#ENEMY y x :0.9)(^(SS#FIGHT x)(против-in x y))))
(B (name borba-na) (=> (SS#ENEMY y x :0.9)(^(SS#FIGHT x)(на-in x y))))


(B (name vrag) (=>(^(S#BATTLE u :0.45) (SS#ENEMY x u :0.45))(враг-nn e1 x)))
(B (name protivnik) (=>(^(S#BATTLE u :0.45) (SS#ENEMY x u :0.45))(противник-nn e1 x)))
(B (name nedrug) (=>(^(S#BATTLE u :0.45) (SS#ENEMY x u :0.45))(недруг-nn e1 x)))
(B (name vrazheskij) (=>(^(S#BATTLE u :0.45) (SS#ENEMY x u :0.45)) (вражеский-adj e1 x)))
(B (name vrazhdebnyj) (=>(^(S#BATTLE u :0.45) (SS#ENEMY x u :0.45))(враждебный-adj e1 x)))

(B (name vrag-of) (=> (R#WAR-AGENT y e0 :0.9)(^(SS#ENEMY x e0)(of-in e1 x y))))

(B (name front) (=>(^(S#BATTLE x :0.45)(SS#FIGHT y :0.45))(фронт-nn e0 y)))
(B (name soldat) (=>(^(S#BATTLE x :0.45)(SS#FIGHT y :0.45))(солдат-nn e0 y)))


(B (name oruzhie) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(оружие-nn e0 y)))
(B (name orudie) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(орудие-nn e0 y)))
(B (name pushka) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(пушка-nn e0 y)))
(B (name ruzhje) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(ружье-nn e0 y)))
(B (name ruzhje2) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(ружьё-nn e0 y)))
(B (name revolver) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(револьвер-nn e0 y)))
(B (name pistolet) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(пистолет-nn e0 y)))
(B (name bomba) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(бомба-nn e0 y)))
(B (name mina) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(мина-nn e0 y)))
(B (name nozh) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(нож-nn e0 y)))
(B (name nozhik) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(ножик-nn e0 y)))
(B (name pulemet) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(пулемет-nn e0 y)))
(B (name pulemet2) (=>(^(S#BATTLE x :0.45)(SS#WEAPON y :0.45))(пулемёт-nn e0 y)))

(B (name battlemap)(=>(I#BATTLE x y :0.9)(S#BATTLE x y)))
(B (name fightmap)(=>(I#FIGHT x :0.9)(SS#FIGHT x)))
(B (name enemymap)(=>(I#ENEMY x y :0.9)(SS#ENEMY x y)))
(B (name weaponmap)(=>(I#WEAPON x y :0.9)(SS#WEAPON x y)))


; SCHOOL 

;(B (name shkola) (=>(^(S#ШКОЛА/SCHOOL x :0.45)(R#SCHOOL-TEACHER x x :0.45))(школа-nn e0 x)))
;(B (name nauchit) (=>(^(S#ШКОЛА/SCHOOL u :0.2)(SS#УЧИТЬ/TEACH e0 u :0.2)(R#SCHOOL-STUDENT y e0 :0.2)(R#SCHOOL-SUBJECT z e0 :0.1) (R#SCHOOL-TEACHER x e0 :0.1))(научить-vb e0 x y z)))
;(B (name uchit) (=>(^(S#ШКОЛА/SCHOOL u :0.2)(SS#УЧИТЬ/TEACH e0 u :0.2)(R#SCHOOL-STUDENT y e0 :0.2)(R#SCHOOL-SUBJECT z e0 :0.1) (R#SCHOOL-TEACHER x e0 :0.1)) (учить-vb e0 x y z)))
;(B (name obuchit) (=>(^(S#ШКОЛА/SCHOOL u :0.2)(SS#УЧИТЬ/TEACH e0 u :0.2)(R#SCHOOL-STUDENT y e0 :0.2)(R#SCHOOL-SUBJECT z e0 :0.1) (R#SCHOOL-TEACHER x e0 :0.1)) (обучить-vb e0 x y z)))
;(B (name obuchat) (=>(^(S#ШКОЛА/SCHOOL u :0.2)(SS#УЧИТЬ/TEACH e0 u :0.2)(R#SCHOOL-STUDENT y e0 :0.2)(R#SCHOOL-SUBJECT z e0 :0.1) (R#SCHOOL-TEACHER x e0 :0.1)) (обучать-vb e0 x y z)))
;(B (name uchitel) (=>(^(S#ШКОЛА/SCHOOL u :0.45)(SS#УЧИТЬ/TEACH e0 u :0.45)(R#SCHOOL-TEACHER x e0))(учитель-nn e0 x)))

; OF - SCHOOL
;(B (name of-school) (=>(R#SCHOOL-SUBJECT  y x :0.9)(^(S#ШКОЛА/SCHOOL x)(of-in e1 x y))))

;(B (name schoolmap)(=>(I#SCHOOL x :0.9)(S#ШКОЛА/SCHOOL x)))


; EXAM

;(B (name ekzamen) (=>(^(S#ШКОЛА/SCHOOL x :0.45)(SS#ЭКЗАМЕН/EXAMINATION y x :0.45))(экзамен-nn e0 y)))
;(B (name test) (=>(^(S#ШКОЛА/SCHOOL x :0.45)(SS#ЭКЗАМЕН/EXAMINATION y x :0.45)) (тест-nn e0 y)))
;(B (name proverka) (=>(^(S#ШКОЛА/SCHOOL x :0.45)(SS#ЭКЗАМЕН/EXAMINATION y x :0.45)) (проверка-nn e0 y)))
;(B (name ekzamen-na) (=>(R#SCHOOL-SUBJECT  y z :0.9)(^(SS#ЭКЗАМЕН/EXAMINATION x z)(на-in e1 x y))))


; CRIME

(B (name prestuplenie) (=>(S#CRIME x :0.9)(преступление-nn e0 x)))
(B (name prestuplenie) (=>(S#CRIME x :0.9) (правонарушение-nn e0 x)))
(B (name prestuplenie) (=>(S#CRIME x :0.9) (^(нарушение-nn e0 x)(право-nn e1 y)(of-in e2 x y))))

(B (name prestuplenie) (=>(^(S#CRIME e0 :0.45)(R#CRIME-AGENT x e0 :0.45))(преступный-adj e0 x)))
(B (name prestupnik) (=>(^(S#CRIME e0 :0.45)(R#CRIME-AGENT x e0 :0.45))(преступник-nn e0 x)))
(B (name bandit) (=>(^(S#CRIME e0 :0.45)(R#CRIME-AGENT x e0 :0.45))(бандит-nn e0 x)))

(B (name grabezh) (=>(^(S#CRIME x :0.45)(SS#THEFT x :0.45))(грабеж-nn e0 x)))
(B (name grabezh) (=>(^(S#CRIME x :0.45)(SS#THEFT x :0.45)) (грабёж-nn e0 x)))
(B (name ograblenie) (=>(^(S#CRIME x :0.45)(SS#THEFT x :0.45)) (ограбление-nn e0 x)))

(B (name grabitelskij) (=>(^(S#CRIME e0 :0.45)(SS#THEFT e0 :0.45)) (грабительский-adj e0 x)))

(B (name grabit) (=>(^(S#CRIME e0 :0.2)(SS#THEFT e0 :0.2)(R#CRIME-AGENT x e0 :0.2)(R#THEFT-THEME z e0 :0.2)) (грабить-vb e0 x z u2)))
(B (name ograbit) (=>(^(S#CRIME e0 :0.2)(SS#THEFT e0 :0.2)(R#CRIME-AGENT x e0 :0.2)(R#THEFT-THEME z e0 :0.2)) (ограбить-vb e0 x z u2)))

(B (name grabitel) (=>(^(S#CRIME e0 :0.3)(SS#THEFT e0 :0.3)(R#CRIME-AGENT x e0 :0.3)) (грабитель-nn e0 x)))
(B (name vor) (=>(^(S#CRIME e0 :0.3)(SS#THEFT e0 :0.3)(R#CRIME-AGENT x e0 :0.3)) (вор-nn e0 x)))
(B (name vorjuga) (=>(^(S#CRIME e0 :0.3)(SS#THEFT e0 :0.3)(R#CRIME-AGENT x e0 :0.3)) (ворюга-nn e0 x)))

(B (name krazha) (=>(^(S#CRIME x :0.45)(SS#THEFT x :0.45)) (кража-nn e0 x)))
(B (name vorovstvo) (=>(^(S#CRIME x :0.45)(SS#THEFT x :0.45)) (воровство-nn e0 x)))


(B (name krast) (=>(^(S#CRIME e0 :0.2)(SS#THEFT e0 :0.2)(R#CRIME-AGENT x e0 :0.2)(R#THEFT-THEME z e0 :0.2)) (красть-vb e0 x z u2)))
(B (name ukrast) (=>(^(S#CRIME e0 :0.2)(SS#THEFT e0 :0.2)(R#CRIME-AGENT x e0 :0.2)(R#THEFT-THEME z e0 :0.2)) (украсть-vb e0 x z u2)))
(B (name obokrast) (=>(^(S#CRIME e0 :0.2)(SS#THEFT e0 :0.2)(R#CRIME-AGENT x e0 :0.2)(R#CRIME-VICTIM z e0 :0.2)) (обокрасть-vb e0 x z u2)))

(B (name vorovat) (=>(^(S#CRIME e0 :0.2)(SS#THEFT e0 :0.2)(R#CRIME-AGENT x e0 :0.2)(R#THEFT-THEME z e0 :0.2)) (воровать-vb e0 x z u2)))
(B (name svorovat) (=>(^(S#CRIME e0 :0.2)(SS#THEFT e0 :0.2)(R#CRIME-AGENT x e0 :0.2)(R#THEFT-THEME z e0 :0.2)) (своровать-vb e0 x z u2)))
(B (name obvorovat) (=>(^(S#CRIME e0 :0.2)(SS#THEFT e0 :0.2)(R#CRIME-AGENT x e0 :0.2)(R#CRIME-VICTIM z e0 :0.2)) (обворовать-vb e0 x z u2)))

; FROM - THEFT
(B (name vorovat-u) (=>(R#CRIME-VICTIM y e0 :0.9)(^(S#THEFT x)(у-in e1 x y))))


(B (name nasilie-nad) (=>(^(S#CRIME x :0.3)(SS#CRIME-TYPE x :0.3)(R#CRIME-VICTIM y x :0.3))(^(насилие-nn e0 x)(над-in e1 x y))))
(B (name nasilie) (=>(^(S#CRIME x :0.45)(SS#CRIME-TYPE x :0.45))(насилие-nn e0 x)))

(B (name crimemap)(=>(I#CRIME x :0.9)(S#CRIME x)))
(B (name crime-typemap)(=>(I#CRIME-TYPE x :0.9)(SS#CRIME-TYPE x)))
(B (name theftmap)(=>(I#THEFT x :0.9)(SS#THEFT x)))
(B (name perpetratorsmap)(=>(I#PERPETRATORS x :0.9)(SS#PERPETRATORS x)))


; PUNISHMENT

(B (name nakazanie) (=>(S#PUNISHMENT x :0.9)(наказание-nn e0 x)))
(B (name kara) (=>(S#PUNISHMENT x :0.9) (кара-nn e0 x)))
(B (name prigovor) (=>(S#PUNISHMENT x :0.9) (приговор-nn e0 x)))

(B (name nakazat) (=>(^(S#PUNISHMENT e0 :0.3)(R#PUNISHMENT-AGENT x e0 :0.3)(R#PUNISHMENT-VICTIM y e0 :0.3))(наказать-vb e0 x y u)))
(B (name nakazyvat) (=>(^(S#PUNISHMENT e0 :0.3)(R#PUNISHMENT-AGENT x e0 :0.3)(R#PUNISHMENT-VICTIM y e0 :0.3)) (наказывать-vb e0 x y u)))
(B (name karat) (=>(^(S#PUNISHMENT e0 :0.3)(R#PUNISHMENT-AGENT x e0 :0.3)(R#PUNISHMENT-VICTIM y e0 :0.3))(карать-vb e0 x y u)))
(B (name pokarat) (=>(^(S#PUNISHMENT e0 :0.3)(R#PUNISHMENT-AGENT x e0 :0.3)(R#PUNISHMENT-VICTIM y e0 :0.3)) (покарать-vb e0 x y u)))
(B (name prigovorit) (=>(^(S#PUNISHMENT e0 :0.3)(R#PUNISHMENT-AGENT x e0 :0.3)(R#PUNISHMENT-VICTIM y e0 :0.3)) (приговорить-vb e0 x y u)))

(B (name nakazannyj) (=>(^(S#PUNISHMENT e0 :0.45)(R#PUNISHMENT-VICTIM x e0 :0.45))(наказанный-adj e0 x)))

; CONFINEMENT 

(B (name zatochenie) (=>(^(S#CONFINEMENT x :0.45)(SS#CONFINED-SPACE x :0.45))(заточение-nn e0 x)))
(B (name turma) (=>(^(S#CONFINEMENT x :0.45)(SS#CONFINED-SPACE x :0.45))(тюрьма-nn e0 x)))
(B (name kletka) (=>(^(S#CONFINEMENT x :0.45)(SS#CONFINED-SPACE x :0.45))(клетка-nn e0 x)))

(B (name lovushka) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45)) (ловушка-nn e0 x)))
(B (name zapadnja) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45)) (западня-nn e0 x)))
(B (name kapkan) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45)) (капкан-nn e0 x)))
(B (name silok) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45)) (силок-nn e0 x)))

(B (name zatochit) (=>(^(S#CONFINEMENT e0 :0.2)(SS#CONFINED-SPACE e0 :0.2)(R#CONFINEMENT-AGENT x e0 :0.2)(R#CONFINEMENT-PATIENT y e0 :0.2))(заточить-vb e0 x y u)))
(B (name zagnat) (=>(^(S#CONFINEMENT e0 :0.2)(SS#CONFINED-SPACE e0 :0.2)(R#CONFINEMENT-AGENT x e0 :0.2)(R#CONFINEMENT-PATIENT y e0 :0.2))(загнать-vb e0 x y u)))
(B (name pojmat) (=>(^(S#CONFINEMENT e0 :0.2)(SS#CONFINED-SPACE e0 :0.2)(R#CONFINEMENT-AGENT x e0 :0.2)(R#CONFINEMENT-PATIENT y e0 :0.2))(поймать-vb e0 x y u)))
(B (name lovit) (=>(^(S#CONFINEMENT e0 :0.2)(SS#CONFINED-SPACE e0 :0.2)(R#CONFINEMENT-AGENT x e0 :0.2)(R#CONFINEMENT-PATIENT y e0 :0.2))(ловить-vb e0 x y u)))
(B (name svjazat) (=>(^(S#CONFINEMENT e0 :0.2)(SS#CONFINED-SPACE e0 :0.2)(R#CONFINEMENT-AGENT x e0 :0.2)(R#CONFINEMENT-PATIENT y e0 :0.2))(связать-vb e0 x y u)))

(B (name puty) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45)) (путы-nn e0 x)))
(B (name boloto) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45)) (болото-nn e0 x)))
(B (name jama) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45))(яма-nn e0 x)))
(B (name udavka) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45))(удавка-nn e0 x)))
(B (name barjer) (=>(^(S#CONFINEMENT u :0.45)(SS#RESTRAINTS x :0.45)) (барьер-nn e0 x)))

;(B (name rabstvo) (=>(^(S#ОГРАНИЧЕНИЕ/CONFINEMENT x :0.45)(SS#РАБСТВО/SLAVERY x :0.45))(рабство-nn e0 x)))
;(B (name rab) (=>(^(S#ОГРАНИЧЕНИЕ/CONFINEMENT u :0.3)(SS#РАБСТВО/SLAVERY e0 :0.3)(R#CONFINEMENT-PATIENT x e0 :0.3))(раб-nn e0 x)))
;(B (name nevolnik) (=>(^(S#ОГРАНИЧЕНИЕ/CONFINEMENT u :0.3)(SS#РАБСТВО/SLAVERY e0 :0.3)(R#CONFINEMENT-PATIENT x e0 :0.3))(невольник-nn e0 x)))
;(B (name rabskij) (=>(^(S#ОГРАНИЧЕНИЕ/CONFINEMENT u :0.45)(SS#РАБСТВО/SLAVERY e0 :0.45))(рабский-adj e0 x)))

(B (name dushit) (=>(^(S#CONFINEMENT e0 :0.3)(SS#RESTRAINTS e0 :0.3)(R#CONFINEMENT-PATIENT y e0 :0.2)) (душить-vb e0 x y u)))
(B (name zadushit) (=>(^(S#CONFINEMENT e0 :0.3)(SS#RESTRAINTS e0 :0.3)(R#CONFINEMENT-PATIENT y e0 :0.2)) (задушить-vb e0 x y u)))

(B (name confinementmap)(=>(I#CONFINEMENT x :0.9)(S#CONFINEMENT x)))
(B (name confinedspacemap)(=>(I#CONFINEDSPACE x :0.9)(SS#CONFINEDSPACE x)))
(B (name restraintsmap)(=>(I#CONFINEDSPACE x :0.9)(SS#RESTRAINTS x)))

; ORGANISM

; GROWTH
(B (name rasti) (=>(^(S#ORGANISM x :0.45)(SS#GROW e0 x :0.45))(расти-vb e0 x u1 u2)))
(B (name vyrasti) (=>(^(S#ORGANISM x :0.45)(SS#GROW e0 x :0.45))(вырасти-vb e0 x u1 u2)))
(B (name vyrastat) (=>(^(S#ORGANISM x :0.45)(SS#GROW e0 x :0.45))(вырастать-vb e0 x u1 u2)))

(B (name rost) (=>(^(S#ORGANISM y :0.45)(SS#GROW e0 y :0.45))(^(of-in e1 x y)(рост-nn e0 x))))
(B (name rost2) (=>(^(S#ORGANISM y :0.47)(SS#GROW e0 y :0.47))(рост-nn e0 x)))
(B (name prirost) (=>(^(S#ORGANISM y :0.45)(SS#GROW e0 y :0.45))(^(of-in e1 x y)(прирост-nn e0 x))))
(B (name prirost2) (=>(^(S#ORGANISM y :0.47)(SS#GROW e0 y :0.47))(прирост-nn e0 x)))


(B (name organismmap)(=>(I#ORGANISM x :0.9)(S#ORGANISM x)))
(B (name growmap)(=>(I#GROW x y :0.9)(SS#GROW x y)))

; ENABLING

(B (name instrument-of) (=>(^(S#ПОЗВОЛЯЮЩИЙ/ENABLING x :0.45)(R#ENABLED y x :0.45))(^(инструмент-nn e0 x)(of-in e1 x y))))
(B (name instrument-dlja) (=>(^(S#ПОЗВОЛЯЮЩИЙ/ENABLING x :0.45)(R#ENABLED y x :0.45))(^(инструмент-nn e0 x)(для-in e1 x y))))

(B (name dver-в) (=>(^(S#ПОЗВОЛЯЮЩИЙ/ENABLING x :0.45)(R#ENABLED y x :0.45))(^(дверь-nn e0 x)(в-in e1 x y))))
(B (name dvigatel-of) (=>(^(S#ПОЗВОЛЯЮЩИЙ/ENABLING x :0.45)(R#ENABLED y x :0.45))(^(двигатель-nn e0 x)(of-in e1 x y))))

(B (name enablingmap)(=>(I#ENABLING x :0.9)(S#ПОЗВОЛЯЮЩИЙ/ENABLING x)))


; ABYSS

(B (name propast) (=>(^(S#ABYSS x :0.45)(SS#ABYSS-TYPE x :0.45)) (пропасть-nn e0 x)))
(B (name ad) (=>(^(S#ABYSS x :0.45)(SS#ABYSS-TYPE x :0.45)) (ад-nn e0 x)))
(B (name peshhera) (=>(^(S#ABYSS x :0.45)(SS#ABYSS-TYPE x :0.45)) (пещера-nn e0 x)))
(B (name dyra) (=>(^(S#ABYSS x :0.45)(SS#ABYSS-TYPE x :0.45)) (дыра-nn e0 x)))
(B (name chernaya-dyra) (=>(^(S#ABYSS x :0.45)(SS#ABYSS-TYPE x :0.45)) (^(черный-adj e0 x)(дыра-nn e1 x))))
(B (name chernaya-dyra2) (=>(^(S#ABYSS x :0.45)(SS#ABYSS-TYPE x :0.45)) (^(чёрный-adj e0 x)(дыра-nn e1 x))))

; DEPTH
(B (name glubina) (=>(^(S#ABYSS u :0.45)(SS#ABYSS-DEPTH x :0.45)) (глубина-nn e0 x)))
(B (name glubokij) (=>(^(S#ABYSS x :0.45)(SS#ABYSS-DEPTH e0 :0.3)) (глубокий-adj e0 x)))
(B (name bezdonnyj) (=>(^(S#ABYSS u :0.3)(SS#ABYSS-DEPTH e0 :0.3)(R#ABYSS-THEME x e0 :0.3)) (бездонный-adj e0 x)))
(B (name uglublenie) (=>(^(S#ABYSS x :0.45)(SS#ABYSS-DEPTH e0 :0.45)) (^(углубление-nn e0 y)(of-in e1 y x))))

; ENTRANCE

(B (name pogruzitsja-v) (=>(^(S#ABYSS z :0.3)(SS#ABYSS-ENTRANCE e0 :0.3)(R#ABYSS-THEME x e0 :0.3)) (^(погрузиться-vb e0 x y u) (в-in e1 e0 z))))
(B (name pogruzhatsja-v) (=>(^(S#ABYSS z :0.3)(SS#ABYSS-ENTRANCE e0 :0.3)(R#ABYSS-THEME x e0 :0.3)) (^(погружаться-vb e0 x y u) (в-in e1 e0 z))))
(B (name provalitsja-v) (=>(^(S#ABYSS z :0.3)(SS#ABYSS-ENTRANCE e0 :0.3)(R#ABYSS-THEME x e0 :0.3)) (^(провалиться-vb e0 x y u) (в-in e1 e0 z))))

; EXIT

(B (name vybratsja-iz) (=>(^(S#ABYSS z :0.3)(SS#ABYSS-EXIT e0 :0.3)(R#ABYSS-THEME x e0 :0.3)) (^(выбраться-vb e0 x y u) (из-in e1 e0 z))))
(B (name vykarabkatsja-iz) (=>(^(S#ABYSS z :0.3)(SS#ABYSS-EXIT e0 :0.3)(R#ABYSS-THEME x e0 :0.3)) (^(выкарабкаться-vb e0 x y u) (из-in e1 e0 z))))

(B (name abyssmap)(=>(I#ABYSS x :0.9)(S#ABYSS x)))
(B (name abysstypemap)(=>(I#ABYSS-TYPE x :0.9)(SS#ABYSS-TYPE x)))
(B (name abyssentrancemap)(=>(I#ABYSS-ENTRANCE x :0.9)(SS#ABYSS-ENTRANCE x)))
(B (name abyssexitmap)(=>(I#ABYSS-EXIT x :0.9)(SS#ABYSS-EXIT x)))

; BURDEN
; WEIGHT
(B (name nosha) (=>(^(S#BURDEN x :0.45)(SS#WEIGHT x :0.45)) (ноша-nn e0 x)))
(B (name gruz) (=>(^(S#BURDEN x :0.45)(SS#WEIGHT x :0.45)) (груз-nn e0 x)))
(B (name obuza) (=>(^(S#BURDEN x :0.45)(SS#WEIGHT x :0.45)) (обуза-nn e0 x)))

(B (name nagruzit) (=>(^(S#BURDEN e0 :0.2)(SS#WEIGHT e0 :0.2)(R#BURDEN-CAUSE x e0 :0.2)(R#BURDEN-VICTIM y e0 :0.2)) (нагрузить-vb e0 x y u)))
(B (name zarguzit) (=>(^(S#BURDEN e0 :0.2)(SS#WEIGHT e0 :0.2)(R#BURDEN-CAUSE x e0 :0.2)(R#BURDEN-VICTIM y e0 :0.2)) (загрузить-vb e0 x y u)))

;RELIEF
(B (name oblegchenie) (=>(^(S#BURDEN x :0.45)(SS#RELIEF x :0.45)) (облегчение-nn e0 x)))

(B (name oblegchit) (=>(^(S#BURDEN x :0.2)(SS#RELIEF x :0.2)(R#CAUSE-RELIEF x e0)(R#BURDEN-VICTIM y e0 :0.2)) (облегчить-vb e0 x y u)))
(B (name oblegchat) (=>(^(S#BURDEN x :0.2)(SS#RELIEF x :0.2)(R#CAUSE-RELIEF x e0)(R#BURDEN-VICTIM y e0 :0.2)) (облегчать-vb e0 x y u)))

(B (name burdenmap) (=>(I#BURDEN  x :0.9) (S#BURDEN x)))
(B (name weightmap) (=>(I#WEIGHT  x :0.9) (SS#WEIGHT x)))
(B (name reliefmap) (=>(I#RELIEF  x :0.9) (SS#RELIEF x)))

; PHYSICAL HARM
; TYPE
(B (name razdavit) (=>(^(S#PHYSICAL-HARM e0 :0.2)(SS#PHYSICAL-HARM-TYPE e0 :0.2)(R#HARM-VICTIM y e0 :0.2)(R#HARM-AGENT x e0 :0.2))(раздавить-vb e0 x y u2)))
(B (name unichtozhit) (=>(^(S#PHYSICAL-HARM e0 :0.2)(SS#PHYSICAL-HARM-TYPE e0 :0.2)(R#HARM-VICTIM y e0 :0.2)(R#HARM-AGENT x e0 :0.2))(уничтожить-vb e0 x y u2)))
(B (name pokalechit) (=>(^(S#PHYSICAL-HARM e0 :0.2)(SS#PHYSICAL-HARM-TYPE e0 :0.2)(R#HARM-VICTIM y e0 :0.2)(R#HARM-AGENT x e0 :0.2))(покалечить-vb e0 x y u2)))
(B (name kalechit) (=>(^(S#PHYSICAL-HARM e0 :0.2)(SS#PHYSICAL-HARM-TYPE e0 :0.2)(R#HARM-VICTIM y e0 :0.2)(R#HARM-AGENT x e0 :0.2))(калечить-vb e0 x y u2)))
(B (name travmirovat) (=>(^(S#PHYSICAL-HARM e0 :0.2)(SS#PHYSICAL-HARM-TYPE e0 :0.2)(R#HARM-VICTIM y e0 :0.2)(R#HARM-AGENT x e0 :0.2))(травмировать-vb e0 x y u2)))
(B (name ranit) (=>(^(S#PHYSICAL-HARM e0 :0.2)(SS#PHYSICAL-HARM-TYPE e0 :0.2)(R#HARM-VICTIM y e0 :0.2)(R#HARM-AGENT x e0 :0.2))(ранить-vb e0 x y u2)))

(B (name travma) (=>(^(S#PHYSICAL-HARM x :0.2)(SS#PHYSICAL-HARM-TYPE x :0.2))(травма-nn e0 x)))

; MAZE

(B (name labirint)(=>(^(S#MAZE e0 :0.45)(SS#CONFUSING-PATHWAYS x :0.45))(лабиринт-nn e0 x)))

(B (name mazemap)(=>(I#MAZE x :0.9)(S#MAZE x)))

;HUMAN-BODY
;DEATH
(B (name umeret)(=>(^(S#HUMAN-BODY e0 :0.3)(SS#DEATH e0 :0.3)(R#DEATH-PATIENT x e0 :0.3)) (умереть-vb e0 x y u)))
(B (name umirat)(=>(^(S#HUMAN-BODY e0 :0.3)(SS#DEATH e0 :0.3)(R#DEATH-PATIENT x e0 :0.3)) (умирать-vb e0 x y u)))
(B (name smert)(=>(^(S#HUMAN-BODY e0 :0.45)(SS#DEATH x :0.45)) (смерть-nn e1 x)))

;LIVING
(B (name zhit)(=>(^(S#HUMAN-BODY e0 :0.3)(SS#LIVING x :0.3)(R#LIVING-PATIENT x e0 :0.3)) (жить-vb e0 x y u)))

(B (name human-bodymap)(=>(I#HUMAN-BODY x :0.9)(S#HUMAN-BODY x)))
(B (name deathmap)(=>(I#DEATH x :0.9)(SS#DEATH x)))
(B (name livingmap)(=>(I#LIVING x :0.9)(SS#LIVING x)))

;VICTIM
;SUFFERER
(B (name zhertva)(=>(^(S#VICTIM x :0.3)(SS#SUFFERER x :0.3)(R#VICTIM-PATIENT x e0 :0.3)) (жертва-nn e0 x)))

(B (name victimmap)(=>(I#VICTIM x :0.9)(S#VICTIM x)))
(B (name sufferermap)(=>(I#SUFFERER x :0.9)(S#SUFFERER x)))

; LOW POINT 
; BOTTOM OF ECONOMIC SCALE
(B (name dno) (=>(^(S#LOW-POINT e0 :0.45)(SS#BOTTOM-OF-ECON-SCALE x :0.45))(дно-nn e0 x)))
(B (name niz) (=>(^(S#LOW-POINT e0 :0.45)(SS#BOTTOM-OF-ECON-SCALE x :0.45))(низ-nn e0 x)))

;MOVEMENT DOWNWARD
(B (name spolzat) (=>(^(S#LOW-POINT u :0.3)(SS#MOVEMENT-DOWNWARD e0 :0.3)(R#MOVE-D-PATIENT x e0 :0.3))(сползать-vb e0 x u u1)))
(B (name spolzti) (=>(^(S#LOW-POINT u :0.3)(SS#MOVEMENT-DOWNWARD e0 :0.3)(R#MOVE-D-PATIENT x e0 :0.3))(сползти-vb e0 x u u1)))
(B (name spuskatsja) (=>(^(S#LOW-POINT u :0.3)(SS#MOVEMENT-DOWNWARD e0 :0.3)(R#MOVE-D-PATIENT x e0 :0.3))(спускаться-vb e0 x u u1)))
(B (name spustitsja) (=>(^(S#LOW-POINT u :0.3)(SS#MOVEMENT-DOWNWARD e0 :0.3)(R#MOVE-D-PATIENT x e0 :0.3))(спуститься-vb e0 x u u1)))
(B (name upast) (=>(^(S#LOW-POINT u :0.3)(SS#MOVEMENT-DOWNWARD e0 :0.3)(R#MOVE-D-PATIENT x e0 :0.3))(упасать-vb e0 x u u1)))
(B (name padat) (=>(^(S#LOW-POINT u :0.3)(SS#MOVEMENT-DOWNWARD e0 :0.3)(R#MOVE-D-PATIENT x e0 :0.3))(падать-vb e0 x u u1)))

;MOVEMENT UPWARD
(B (name podnjatsja) (=>(^(S#LOW-POINT a :0.3)(SS#MOVEMENT-UPWARD e0 :0.3)(R#MOVE-U-PATIENT x e0 :0.3))(подняться-vb e0 x u u1)))
(B (name podnimatsja) (=>(^(S#LOW-POINT a :0.3)(SS#MOVEMENT-UPWARD e0 :0.3)(R#MOVE-U-PATIENT x e0 :0.3))(подниматься-vb e0 x u u1)))
(B (name podskachit) (=>(^(S#LOW-POINT a :0.3)(SS#MOVEMENT-UPWARD e0 :0.3)(R#MOVE-U-PATIENT x e0 :0.3))(подскачить-vb e0 x u u1)))
(B (name skaknut) (=>(^(S#LOW-POINT a :0.3)(SS#MOVEMENT-UPWARD e0 :0.3)(R#MOVE-U-PATIENT x e0 :0.3))(скакнуть-vb e0 x u u1)))

(B (name lowpointmap)(=>(I#LOW-POINT x :0.9)(S#LOW-POINT x)))
(B (name bottom-of-econ-scale-map)(=>(I#BOTTOM-OF-ECON-SCALE x :0.9)(SS#BOTTOM-OF-ECON-SCALE x)))
(B (name movement-downwardmap)(=>(I#MOVEMENT-DOWNWARD x :0.9)(SS#MOVEMENT-DOWNWARD x)))
(B (name movement-upwardmap)(=>(I#MOVEMENT-UPWARD x :0.9)(SS#MOVEMENT-UPWARD x)))

